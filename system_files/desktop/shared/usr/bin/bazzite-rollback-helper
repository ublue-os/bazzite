#!/bin/bash

# Source ujust library for colors and gum functionality
source /usr/lib/ujust/ujust.sh

image="$(echo "$2" | cut -d ':' -f1)"
branch="$(echo "$2" | cut -d ':' -f2)"

IMAGE_INFO="/usr/share/ublue-os/image-info.json"
DEFAULT_IMAGE=$(jq -r '."image-name"' < $IMAGE_INFO)
DEFAULT_BRANCH=stable


helptext=$(cat << EOF

====== Bazzite Rollback Helper Util ======

This tool aims to help with rollbacks and rebases

NOTE: Rebasing to different desktop environments usually breaks things and is unsupported

Usage: bazzite-rollback-helper [OPTION] [ARGUMENT]

Options:
  list [BRANCH]      List available Bazzite images, Default is "$DEFAULT_BRANCH"
  rollback           Rolls back to previously installed Bazzite image. alias for "rpm-ostree rollback"
  current            Show currently active Bazzite image
  rebase             Rebase/rollback to specified Bazzite image, Default is $DEFAULT_IMAGE:$DEFAULT_BRANCH

Examples:
  bazzite-rollback-helper list stable
  bazzite-rollback-helper rollback
  bazzite-rollback-helper current
  bazzite-rollback-helper rebase 40-stable-20240722
  bazzite-rollback-helper rebase bazzite-deck:40-stable-20240722
  bazzite-rollback-helper rebase bazzite-deck:stable
  bazzite-rollback-helper rebase stable
  bazzite-rollback-helper rebase testing

For more help, visit https://discord.bazzite.gg.

EOF
)


function list_images() {
  local _help="\
List images with a specified tag

INPUTS:
  \$1: branch   Branch we want to get tags from.
                Fallbacks to \"$DEFAULT_BRANCH\"
"
  if [[ $* =~ --help ]]; then
    echo "$_help" && return
  fi
  local branch=${1:-$DEFAULT_BRANCH}
  local regex='.Tags[]'
  regex="$regex"\ ' | select(test("^PLACEHOLDER|^PLACEHOLDER-(?:\\d+\\.\\d+|\\d+)"))'
  regex=${regex//PLACEHOLDER/$branch}
  echo -e >&2 "Listing images for $branch\nThis can take a bit of time..."
  skopeo list-tags docker://ghcr.io/ublue-os/bazzite | jq -r "$regex"
}

function current() {
  local _help="\
Show currently active Bazzite image"
  if [[ $* =~ --help ]]; then
    echo "$_help" && return
  fi

  rpm-ostree status -vb
}

function rollback() {
  local _help="Rolls back to previously installed Bazzite image. alias for \"rpm-ostree rollback\""
  if [[ $* =~ --help ]]; then
    echo "$_help" && return
  fi

  rpm-ostree rollback && \
    echo >&2 "Reboot for changes to take effect"
}

function rebase() {
  local _help="\
Rebase/rollback to specified Bazzite image, Default is $DEFAULT_IMAGE:$DEFAULT_BRANCH

INPUTS:
  \$1: branch   Branch we want to rebase. Format must be 
                one of the following:
                  - ostree-image (ex.: 'ostree-image-signed:docker://ghcr.io/ublue-os/bazzite:stable')
                  - NAME:TAG (ex.: 'bazzite:stable-40')
                  - TAG (ex.: 'testing')
                Fallbacks to \"$DEFAULT_BRANCH\"\
"
  if [[ $* =~ --help ]]; then
  local _help
    echo "$_help" && return
  fi

  # Skip asking for confirmation by passing the '-y' flag
  local CONFIRM_YES
  CONFIRM_YES=$(
    while (( $# )); do
      case "$1" in
        -y|--yes) echo 1; return ;;
      esac
      shift
    done
    echo 0
  )

  # Fetch our image reference prefix (ex.: ostree-image-signed:docker://ghcr.io/ublue-os)
  # from rpm-ostree
  local base_img_pfx
  base_img_pfx=$(rpm-ostree status -b --json | jq -r '.deployments[]["container-image-reference"]')
  base_img_pfx=${base_img_pfx///${DEFAULT_IMAGE}*/}

  local img_ref # Final image ref string to rebase
  local usr_inpt="$1"
  case "$usr_inpt" in
  "") echo >&2 "$_help"; return ;;
  ostree-image-*)
    # ostree-image
    # echo >&2 "Format detected"
    img_ref=$usr_inpt
  ;;
  *:*)
    # IMG_NAME:TAG
    # echo >&2 "Format detected: IMG_NAME:TAG"
    img_ref="$base_img_pfx"/"$usr_inpt"
  ;;
  *)
    # TAG
    # echo >&2 "Format detected: TAG"
    img_ref="$base_img_pfx"/"$DEFAULT_IMAGE":"$usr_inpt"
  ;;
  esac

  # Ask for confirmation. If is okay, rebase.
  local question="\
Rebasing to $img_ref. Continue? [Y/n]: "
  local yn
  if [[ $CONFIRM_YES -ne 1 ]]; then
    read -rp "$question" yn
    yn=${yn:=y} # Default to yes
  else yn=y
  fi
  case $yn in
    # Finally, rebase
    [yY]) rpm-ostree rebase "$img_ref" || return 1 ;;
    *) echo >&2 "Stopping rebase..."; return 1 ;;
  esac
}

# Function to show current system status
show_current_status() {
  echo "${bold}Current System Status:${normal}"
  echo
  local current_deployment=$(rpm-ostree status --json | jq -r '.deployments[] | select(.booted == true) | .["container-image-reference"]')
  if [ -n "$current_deployment" ]; then
    echo "  ${bold}Active Image:${normal} ${green}$current_deployment${normal}"
  fi
  
  local pending_deployment=$(rpm-ostree status --json | jq -r '.deployments[] | select(.booted != true) | .["container-image-reference"]' | head -1)
  if [ -n "$pending_deployment" ] && [ "$pending_deployment" != "null" ]; then
    echo "  ${bold}Pending Image:${normal} ${yellow}$pending_deployment${normal} ${yellow}(will boot next)${normal}"
  fi
  echo
}

# Function to handle custom provider rebase
custom_provider_menu() {
  local provider="$1"
  
  echo
  echo "${bold}Custom Provider: ${green}$provider${normal}"
  echo
  echo "${bold}Choose an action:${normal}"
  local OPTION=$(Choose "List Available Images" "Rebase to Specific Image" "Back to Main Menu")
  
  case "$OPTION" in
    "List Available Images")
      echo
      echo "Enter branch to list (or press Enter for '$DEFAULT_BRANCH'):"
      read -r branch_input
      branch_input=${branch_input:-$DEFAULT_BRANCH}
      echo -e >&2 "Listing images for $branch_input from $provider\nThis can take a bit of time..."
      skopeo list-tags "docker://ghcr.io/$provider/bazzite" | jq -r ".Tags[] | select(test(\"^$branch_input|^$branch_input-(?:\\\\d+\\\\.\\\\d+|\\\\d+)\"))"
      echo
      echo "Press Enter to continue..."
      read -r
      custom_provider_menu "$provider"
      ;;
    "Rebase to Specific Image")
      echo
      echo "Enter the image:tag to rebase to:"
      echo "Examples:"
      echo "  - ${bold}bazzite:stable${normal}"
      echo "  - ${bold}bazzite-deck:testing${normal}"
      echo "  - ${bold}bazzite-gnome:40-stable-20240722${normal}"
      echo
      echo "Enter image:tag (or press Enter to cancel):"
      read -r image_tag
      if [ -n "$image_tag" ]; then
        # Get current image prefix but replace the provider
        local current_prefix=$(rpm-ostree status -b --json | jq -r '.deployments[]["container-image-reference"]')
        local signing_scheme
        if [[ "$current_prefix" == *"ostree-image-signed"* ]]; then
          signing_scheme="ostree-image-signed:docker://ghcr.io"
        else
          signing_scheme="ostree-unverified-registry:docker://ghcr.io"
        fi
        
        local custom_ref="$signing_scheme/$provider/$image_tag"
        echo
        echo "Rebasing to: ${bold}$custom_ref${normal}"
        echo "Are you sure? ${yellow}(y/N)${normal}"
        read -r confirm
        if [[ "${confirm,,}" =~ ^y ]]; then
          rpm-ostree rebase "$custom_ref" || echo "Failed to rebase. The image may not exist or be accessible."
        else
          echo "Rebase cancelled."
        fi
      else
        echo "Rebase cancelled."
      fi
      echo
      echo "Press Enter to continue..."
      read -r
      custom_provider_menu "$provider"
      ;;
    "Back to Main Menu")
      interactive_menu
      ;;
    *)
      echo "Invalid option selected."
      custom_provider_menu "$provider"
      ;;
  esac
}

# Interactive menu function
interactive_menu() {
  # Show help text and current status
  echo "$helptext"
  show_current_status
  
  echo "${bold}Choose an action:${normal}"
  local OPTION=$(Choose "List Images" "Show Current Image" "Rollback" "Rebase" "Custom Image Provider" "Exit")
  
  case "$OPTION" in
    "List Images")
      echo
      echo "Enter branch to list (or press Enter for '$DEFAULT_BRANCH'):"
      read -r branch_input
      branch_input=${branch_input:-$DEFAULT_BRANCH}
      list_images "$branch_input"
      echo
      echo "Press Enter to continue..."
      read -r
      interactive_menu
      ;;
    "Show Current Image")
      echo
      current
      echo
      echo "Press Enter to continue..."
      read -r
      interactive_menu
      ;;
    "Rollback")
      echo
      echo "Are you sure you want to rollback to the previous image? ${yellow}(y/N)${normal}"
      read -r confirm
      if [[ "${confirm,,}" =~ ^y ]]; then
        rollback
      else
        echo "Rollback cancelled."
      fi
      echo
      echo "Press Enter to continue..."
      read -r
      interactive_menu
      ;;
    "Rebase")
      echo
      echo "Enter the image/tag to rebase to:"
      echo "Examples:"
      echo "  - ${bold}stable${normal} (rebase to stable branch)"
      echo "  - ${bold}testing${normal} (rebase to testing branch)"
      echo "  - ${bold}bazzite-deck:stable${normal} (specific image and tag)"
      echo "  - ${bold}40-stable-20240722${normal} (specific tag)"
      echo
      echo "Enter rebase target (or press Enter to cancel):"
      read -r rebase_input
      if [ -n "$rebase_input" ]; then
        rebase "$rebase_input" -y
      else
        echo "Rebase cancelled."
      fi
      echo
      echo "Press Enter to continue..."
      read -r
      interactive_menu
      ;;
    "Custom Image Provider")
      echo
      echo "Enter the custom provider/organization name:"
      echo "  - Default: ${bold}ublue-os${normal}"
      echo "  - Examples: ${bold}my-org${normal}, ${bold}custom-builder${normal}, ${bold}fork-maintainer${normal}"
      echo
      echo "Enter provider name (or press Enter for 'ublue-os'):"
      read -r provider_input
      provider_input=${provider_input:-ublue-os}
      # Convert to lowercase for ghcr.io compatibility
      provider_input=$(echo "$provider_input" | tr '[:upper:]' '[:lower:]')
      
      echo
      echo "Using provider: ${bold}$provider_input${normal}"
      custom_provider_menu "$provider_input"
      ;;
    "Exit")
      echo "Exiting..."
      exit 0
      ;;
    *)
      echo "Invalid option selected."
      interactive_menu
      ;;
  esac
}

if [[ "$1" == "list" ]]; then
  list_images "${@:2}"
  exit

elif [[ "$1" == "rollback" ]]; then
  rollback "${@:2}"
  exit

elif [[ "$1" == "current" ]]; then
  current "${@:2}"
  exit

elif [[ "$1" == "rebase" ]]; then
  rebase "${@:2}"
  exit

# display the helptext and start interactive mode
elif [[ "$1" == "-h" || "$1" == "--h" || "$1" == "-help" || "$1" == "--help" || "$1" == "help" || -z "$1" ]]; then
 interactive_menu
else
 echo "Unsupported Option: $1"
 echo "run 'bazzite-rollback-helper help' for more details"
fi
